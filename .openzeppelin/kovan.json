{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD01917810e6CDf2F546d0f023C47a655230CBB17",
    "txHash": "0x62bea4289a76e36d7b8629d788a340d1b2acb599d2374e7da39ccd6fe4297c87",
    "deployTransaction": {
      "hash": "0x62bea4289a76e36d7b8629d788a340d1b2acb599d2374e7da39ccd6fe4297c87",
      "type": null,
      "accessList": null,
      "blockHash": "0x21e65f7b9c149c0d2525859918d57ea3d5371f9160ceb1cea7d716355956bf93",
      "blockNumber": 25536476,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0x9EaA173b5C6283F475539E6C0a91Efefdc9BfAF5",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x012a05f200"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 10,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x16ec7d689368f8ea700e477c8742365ac1a65cbc739c67504b653508035a6968",
      "s": "0x43ab7570f149983f0e954fa94c8c21a44953a4f05b6d812044856ef496983fc5",
      "v": 119,
      "creates": "0xD01917810e6CDf2F546d0f023C47a655230CBB17",
      "raw": "0xf9080d0a85012a05f200830762b48080b907ba608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c6343000802003377a016ec7d689368f8ea700e477c8742365ac1a65cbc739c67504b653508035a6968a043ab7570f149983f0e954fa94c8c21a44953a4f05b6d812044856ef496983fc5",
      "chainId": 42
    }
  },
  "proxies": [
    {
      "address": "0x48854c590177Fa00DDdb357FC252125e9a25451d",
      "txHash": "0x2b1bcabf7fe8b0ef2cd5306da7fb0b97ea791f9430d2c443eff40d06081bfea7",
      "kind": "transparent"
    },
    {
      "address": "0xB7f63B948118303339BB5e3f4EB549c26cbF908B",
      "txHash": "0x90cee414c99df045038977ab7e26c6ca123c2d430600ffe4dd750d48a998500a",
      "kind": "transparent"
    },
    {
      "address": "0x7708e631B782B5d2Cb50370b5bE54e2273482B5E",
      "txHash": "0xb2d99cb7a9c3ddd066c26b755a52d5a056f4d72bf13eec6d26c92ee50ca295ae",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5b660c2da17be8574a2858bfd8c79bf10547e20021a63ea5141bae08270c57b9": {
      "address": "0x863aA1f1b4e6aCebE243189C564325E0ED2F5D88",
      "txHash": "0xa1f302409f67a093f06e0b9f352cea727a115dfa108d67ca5c7c0577fa03c9a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "SecureUpgradable",
            "label": "StockToken",
            "type": "t_contract(IERC20)1312",
            "src": "contracts/STT/SecureUpgradable.sol:20"
          },
          {
            "contract": "SecureUpgradable",
            "label": "owners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/SecureUpgradable.sol:28"
          },
          {
            "contract": "SecureUpgradable",
            "label": "elected",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/SecureUpgradable.sol:29"
          },
          {
            "contract": "SecureUpgradable",
            "label": "election",
            "type": "t_mapping(t_address,t_struct(elect)4759_storage)",
            "src": "contracts/STT/SecureUpgradable.sol:30"
          },
          {
            "contract": "STT",
            "label": "bnbPair",
            "type": "t_contract(IAggregator)4035",
            "src": "contracts/STT/STT.sol:11"
          },
          {
            "contract": "STT",
            "label": "sttsPair",
            "type": "t_contract(IPancakePair)4077",
            "src": "contracts/STT/STT.sol:12"
          },
          {
            "contract": "STT",
            "label": "assetsBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/STT/STT.sol:14"
          }
        ],
        "types": {
          "t_contract(IAggregator)4035": {
            "label": "contract IAggregator"
          },
          "t_contract(IPancakePair)4077": {
            "label": "contract IPancakePair"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)1312": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(elect)4759_storage)": {
            "label": "mapping(address => struct SecureUpgradable.elect)"
          },
          "t_struct(elect)4759_storage": {
            "label": "struct SecureUpgradable.elect",
            "members": [
              {
                "label": "counter",
                "type": "t_uint256"
              },
              {
                "label": "timer",
                "type": "t_uint256"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3af916342eeac3bfc578c52df40a17b8cf0a789d5587a3f938449fe1867097bd": {
      "address": "0x2bcc2A5Cba07602865846A8808115C9070557765",
      "txHash": "0xb8a080da26b41a72cb1c67e85725bb600e5c4e037001dd794f4f2dfdc49bef84",
      "layout": {
        "storage": [
          {
            "contract": "Secure",
            "label": "StockToken",
            "type": "t_contract(IERC20)805",
            "src": "contracts/STT/Secure.sol:19"
          },
          {
            "contract": "Secure",
            "label": "owners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/Secure.sol:27"
          },
          {
            "contract": "Secure",
            "label": "elected",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/Secure.sol:28"
          },
          {
            "contract": "Secure",
            "label": "election",
            "type": "t_mapping(t_address,t_struct(elect)1887_storage)",
            "src": "contracts/STT/Secure.sol:29"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "STT",
            "label": "bnbPair",
            "type": "t_contract(IAggregator)1163",
            "src": "contracts/STT/STT.sol:12"
          },
          {
            "contract": "STT",
            "label": "sttsPair",
            "type": "t_contract(IPancakePair)1205",
            "src": "contracts/STT/STT.sol:13"
          },
          {
            "contract": "STT",
            "label": "assetsBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/STT/STT.sol:15"
          }
        ],
        "types": {
          "t_contract(IAggregator)1163": {
            "label": "contract IAggregator"
          },
          "t_contract(IPancakePair)1205": {
            "label": "contract IPancakePair"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)805": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_address,t_struct(elect)1887_storage)": {
            "label": "mapping(address => struct Secure.elect)"
          },
          "t_struct(elect)1887_storage": {
            "label": "struct Secure.elect",
            "members": [
              {
                "label": "counter",
                "type": "t_uint256"
              },
              {
                "label": "timer",
                "type": "t_uint256"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          }
        }
      }
    },
    "e434faf6e7e820f1ab311450057848c82ea21ba564543ca8f75e37d9264b2856": {
      "address": "0x44F57023b2F2C7ea596aCa57eB31688d6F808c23",
      "txHash": "0xefae7b1c09c61a03e883e3b0eca188cff02e84ae4e1351c7a0b1a48e06e1fd29",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:310"
          },
          {
            "contract": "Secure",
            "label": "StockToken",
            "type": "t_contract(IERC20)805",
            "src": "contracts/STT/Secure.sol:19"
          },
          {
            "contract": "Secure",
            "label": "owners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/Secure.sol:27"
          },
          {
            "contract": "Secure",
            "label": "elected",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/STT/Secure.sol:28"
          },
          {
            "contract": "Secure",
            "label": "election",
            "type": "t_mapping(t_address,t_struct(elect)1889_storage)",
            "src": "contracts/STT/Secure.sol:29"
          },
          {
            "contract": "STT",
            "label": "bnbPair",
            "type": "t_contract(IAggregator)1163",
            "src": "contracts/STT/STT.sol:12"
          },
          {
            "contract": "STT",
            "label": "sttsPair",
            "type": "t_contract(IPancakePair)1205",
            "src": "contracts/STT/STT.sol:13"
          },
          {
            "contract": "STT",
            "label": "assetsBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/STT/STT.sol:15"
          }
        ],
        "types": {
          "t_contract(IAggregator)1163": {
            "label": "contract IAggregator"
          },
          "t_contract(IPancakePair)1205": {
            "label": "contract IPancakePair"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)805": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(elect)1889_storage)": {
            "label": "mapping(address => struct Secure.elect)"
          },
          "t_struct(elect)1889_storage": {
            "label": "struct Secure.elect",
            "members": [
              {
                "label": "counter",
                "type": "t_uint256"
              },
              {
                "label": "timer",
                "type": "t_uint256"
              },
              {
                "label": "voted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
